const __sfc__ = defineComponent({
    data() {
        return {
            count: 0,
            ret: true
        };
    },
    onLoad() {
    },
    methods: {
        onScroll() {
            this.count++;
            console.log("scroll: ", this.count);
            uni.createSelectorQuery()
                .in(this)
                .selectAll('content-item')
                .boundingClientRect()
                .exec((result) => {
                this.count--;
            });
            console.log("scroll: ", this.count);
            if (this.count > 0) {
                this.ret = false;
            }
        }
    }
});
export default __sfc__;
function GenPagesAPICreateSelectorQueryCreateSelectorQueryOnScrollRender(this: InstanceType<typeof __sfc__>): any | null {
    const _ctx = this;
    const _cache = this.$.renderCache;
    return createElementVNode("scroll-view", utsMapOf({
        onScroll: _ctx.onScroll,
        style: normalizeStyle(utsMapOf({ "flex": "1" }))
    }), [
        createElementVNode(Fragment, null, RenderHelpers.renderList(60, (i, __key, __index, _cached): any => {
            return createElementVNode("view", utsMapOf({ class: "content-item" }), [
                createElementVNode("text", utsMapOf({ class: "text" }), "item-" + toDisplayString(i), 1 /* TEXT */)
            ]);
        }), 64 /* STABLE_FRAGMENT */)
    ], 44 /* STYLE, PROPS, NEED_HYDRATION */, ["onScroll"]);
}
const GenPagesAPICreateSelectorQueryCreateSelectorQueryOnScrollStyles = [];
