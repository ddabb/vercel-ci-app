const __sfc__ = defineComponent({
    data() {
        return {
            univerifyManager: null as UniverifyManager | null,
            phone: '',
            slogan: '',
            privacyName: '',
            privacyUrl: '',
            closeIcon: '\uE650'
        };
    },
    onLoad(options: OnLoadOptions) {
        this.univerifyManager = uni.getUniverifyManager();
        this.phone = options['phone'] as string;
        this.slogan = options['slogan'] as string;
        this.privacyName = options['name'] as string;
        this.privacyUrl = options['link'] as string;
    },
    methods: {
        closePage() {
            uni.closeDialogPage({
                dialogPage: this.$page,
                animationType: 'slide-out-bottom',
                success(res) {
                    console.log('closeThisDialog success', res);
                },
                fail(err) {
                    console.log('closeThisDialog fail', err);
                }
            });
        },
        openLink() {
            let url = '/pages/API/get-univerify-manager/full-webview-page?url=' + this.privacyUrl + '&title=' + this.privacyName + '&animationType=slide-out-bottom';
            uni.openDialogPage({
                url: url,
                animationType: 'slide-in-bottom',
                success(res) {
                    console.log("打开隐私协议");
                },
                fail(err) {
                    console.log(err);
                }
            });
        },
        loginIn() {
            const numberTextElement = this.$page.getElementById('number-text');
            const sloganTextElement = this.$page.getElementById('slogan-text');
            const loginButtonElement = this.$page.getElementById('login-button');
            const privacyCheckBoxElement = this.$page.getElementById('privacy-checkbox');
            const privacyTextElement = this.$page.getElementById('privacy-text');
            this.univerifyManager?.customLogin({
                numberTextElement: numberTextElement!,
                sloganTextElement: sloganTextElement!,
                loginButtonElement: loginButtonElement!,
                privacyCheckBoxElement: privacyCheckBoxElement!,
                privacyTextElement: privacyTextElement!,
                success: (res) => {
                    console.log(res);
                    this.takePhoneNumber(res.accessToken, res.openId);
                },
                fail: (error) => {
                    if (error.errCode == 40001) {
                        uni.showToast({
                            title: "请同意服务条款",
                            position: "bottom",
                            duration: 2000
                        });
                    }
                    else if (error.errCode == 40002) {
                        uni.showToast({
                            title: "授权页不符合规范",
                            position: "bottom",
                            duration: 2000
                        });
                    }
                    else {
                        const errorMsg = JSON.parseObject(error.cause?.cause?.message ?? "")?.getString("errorDesc") ?? error.errMsg;
                        uni.showToast({
                            title: errorMsg,
                            position: "bottom",
                            duration: 2000
                        });
                    }
                }
            } as UniVerifyManagerCustomLoginOptions);
        },
        takePhoneNumber(token: string, openId: string) {
            //云函数取号
            uniCloud.callFunction({
                name: 'univerify',
                data: {
                    access_token: token,
                    openid: openId // 客户端一键登录接口返回的openid
                }
            }).then(res => {
                // 关闭登录页
                this.closePage();
                setTimeout(() => {
                    uni.showModal({
                        title: '取号成功',
                        content: res.result.getJSON("res")?.getString("phoneNumber"),
                        showCancel: false
                    });
                }, 100);
            }).catch(err => {
                console.error(JSON.stringify(err));
                // 关闭登录页
                this.closePage();
                setTimeout(() => {
                    uni.showModal({
                        title: '取号失败',
                        content: (err as Error).message,
                        showCancel: false
                    });
                }, 100);
            });
        },
        otherLogin() {
            //此处可实现其他登录方式
            uni.showToast({
                title: "使用其他方式登录",
                position: "bottom"
            });
        }
    }
});
export default __sfc__;
function GenPagesAPIGetUniverifyManagerUniverifyCustomPageRender(this: InstanceType<typeof __sfc__>): any | null {
    const _ctx = this;
    const _cache = this.$.renderCache;
    const _component_checkbox = resolveComponent("checkbox");
    return createElementVNode("view", utsMapOf({ class: "container" }), [
        createElementVNode("view", utsMapOf({ class: "safe_content" }), [
            createElementVNode("text", utsMapOf({
                class: "close_icon",
                onClick: _ctx.closePage
            }), toDisplayString(_ctx.closeIcon), 9 /* TEXT, PROPS */, ["onClick"]),
            createElementVNode("text", utsMapOf({ class: "title" }), "这是一个普通uvue的dialogPage页面"),
            createElementVNode("view", utsMapOf({ class: "number" }), [
                createElementVNode("text", utsMapOf({
                    id: "number-text",
                    class: "number-text",
                    ref: "number-text"
                }), toDisplayString(_ctx.phone), 513 /* TEXT, NEED_PATCH */),
                createElementVNode("text", utsMapOf({
                    id: "slogan-text",
                    class: "slogan-text"
                }), toDisplayString(_ctx.slogan), 1 /* TEXT */)
            ]),
            createElementVNode("button", utsMapOf({
                id: "login-button",
                class: "login-button",
                onClick: _ctx.loginIn
            }), "本机号码一键登录", 8 /* PROPS */, ["onClick"]),
            createElementVNode("view", utsMapOf({ class: "privacy" }), [
                createVNode(_component_checkbox, utsMapOf({
                    id: "privacy-checkbox",
                    class: "privacy-checkbox",
                    ref: "privacy-checkbox",
                    checked: false
                }), null, 512 /* NEED_PATCH */),
                createElementVNode("text", utsMapOf({ class: "privacy-normal-text" }), "登录即同意"),
                createElementVNode("text", utsMapOf({
                    id: "privacy-text",
                    class: "privacy-text",
                    onClick: _ctx.openLink
                }), toDisplayString(_ctx.privacyName), 9 /* TEXT, PROPS */, ["onClick"])
            ]),
            createElementVNode("text", utsMapOf({
                class: "other",
                onClick: _ctx.otherLogin
            }), "其他登录方式", 8 /* PROPS */, ["onClick"])
        ])
    ]);
}
const GenPagesAPIGetUniverifyManagerUniverifyCustomPageStyles = [utsMapOf([["container", padStyleMapOf(utsMapOf([["backgroundColor", "#FFFFFF"], ["flex", 1], ["width", "100%"]]))], ["safe_content", padStyleMapOf(utsMapOf([["paddingTop", CSS_VAR_STATUS_BAR_HEIGHT], ["width", "100%"], ["height", "100%"]]))], ["close_icon", padStyleMapOf(utsMapOf([["left", "90%"], ["top", 15], ["fontFamily", "uni-icon"], ["fontSize", 24]]))], ["title", padStyleMapOf(utsMapOf([["alignSelf", "center"], ["top", 20]]))], ["number", padStyleMapOf(utsMapOf([["width", "100%"], ["top", "25%"], ["position", "absolute"], ["height", 120]]))], ["number-text", padStyleMapOf(utsMapOf([["width", "100%"], ["textAlign", "center"], ["fontSize", 28], ["fontWeight", "bold"], ["alignSelf", "center"], ["height", 30]]))], ["slogan-text", padStyleMapOf(utsMapOf([["marginTop", 10], ["width", "100%"], ["fontSize", 13], ["textAlign", "center"], ["alignSelf", "center"], ["color", "#808080"], ["height", 20]]))], ["login-button", padStyleMapOf(utsMapOf([["width", "80%"], ["top", "40%"], ["position", "absolute"], ["alignSelf", "center"], ["backgroundColor", "#FF4500"], ["fontSize", 16], ["color", "#FFFFFF"]]))], ["privacy", padStyleMapOf(utsMapOf([["marginTop", 10], ["flexDirection", "row"], ["flexWrap", "wrap"], ["top", "45%"], ["width", "100%"], ["justifyContent", "center"], ["alignSelf", "center"], ["position", "absolute"]]))], ["privacy-checkbox", padStyleMapOf(utsMapOf([["transform", "scale(0.65)"]]))], ["privacy-text", padStyleMapOf(utsMapOf([["marginTop", 4], ["color", "#007aff"], ["fontSize", 14]]))], ["privacy-normal-text", padStyleMapOf(utsMapOf([["marginTop", 4], ["color", "#808080"], ["fontSize", 14]]))], ["other", padStyleMapOf(utsMapOf([["bottom", "7%"], ["transform", "translateY(50%)"], ["position", "absolute"], ["alignSelf", "center"], ["fontSize", 14]]))]])];
