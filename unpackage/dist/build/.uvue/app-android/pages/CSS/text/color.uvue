const __sfc__ = defineComponent({});
export default __sfc__;
function GenPagesCSSTextColorRender(this: InstanceType<typeof __sfc__>): any | null {
    const _ctx = this;
    const _cache = this.$.renderCache;
    return createElementVNode("view", utsMapOf({
        style: normalizeStyle(utsMapOf({ "flex-grow": "1" }))
    }), [
        createElementVNode("view", utsMapOf({
            style: normalizeStyle(utsMapOf({ "height": "250px", "background-color": "gray", "justify-content": "center", "align-items": "center" }))
        }), [
            createElementVNode("text", utsMapOf({
                class: "common",
                style: normalizeStyle(utsMapOf({ "color": "rgb(255, 0, 0)" }))
            }), "color: rgb(255, 0, 0)", 4 /* STYLE */),
            createElementVNode("text", utsMapOf({
                class: "common",
                style: normalizeStyle(utsMapOf({ "color": "rgba(255, 0, 0, 0.5)" }))
            }), "color: rgba(255, 0, 0, 0.5)", 4 /* STYLE */),
            createElementVNode("text", utsMapOf({
                class: "common",
                style: normalizeStyle(utsMapOf({ "color": "#ff0000" }))
            }), "color: #ff0000", 4 /* STYLE */),
            createElementVNode("text", utsMapOf({
                class: "common",
                style: normalizeStyle(utsMapOf({ "color": "#f00" }))
            }), "color: #f00", 4 /* STYLE */),
            createElementVNode("text", utsMapOf({
                class: "common",
                style: normalizeStyle(utsMapOf({ "color": "red" }))
            }), "color: red", 4 /* STYLE */)
        ], 4 /* STYLE */)
    ], 4 /* STYLE */);
}
const GenPagesCSSTextColorStyles = [utsMapOf([["common", padStyleMapOf(utsMapOf([["fontSize", 20]]))]])];
